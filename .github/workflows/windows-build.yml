name: Windows EXE and Installer

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller

      - name: Install build tools (Inno Setup, Tesseract, Poppler)
        run: |
          choco install -y innosetup
          choco install -y tesseract
          choco install -y poppler
        shell: powershell

      - name: Build app with PyInstaller (onedir)
        run: |
          pyinstaller --windowed --noconsole ^
            --name "AanAI" ^
            --icon assets\app.ico ^
            --add-data "logo.png;." ^
            app.py
        shell: cmd

      - name: Prepare vendor binaries (Tesseract & Poppler)
        run: |
          $ErrorActionPreference = 'Stop'
          $dist = "dist/AanAI"
          New-Item -ItemType Directory -Force -Path "$dist/vendor/tesseract" | Out-Null
          New-Item -ItemType Directory -Force -Path "$dist/vendor/poppler/bin" | Out-Null
          
          # Tesseract (exe and tessdata)
          $tessRoot = "C:/Program Files/Tesseract-OCR"
          if (-not (Test-Path "$tessRoot/tesseract.exe")) {
            Write-Error "Tesseract not found at $tessRoot"
          }
          Copy-Item "$tessRoot/tesseract.exe" "$dist/vendor/tesseract/" -Force
          if (Test-Path "$tessRoot/tessdata") {
            Copy-Item "$tessRoot/tessdata" "$dist/vendor/tesseract/" -Recurse -Force
          }
          
          # Poppler bins (Chocolatey installs under lib/poppler*/tools)
          $popplerTools = $null
          $popplerPkg = Get-ChildItem "C:/ProgramData/chocolatey/lib" -Filter "poppler*" -ErrorAction SilentlyContinue | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if ($popplerPkg) {
            $candidate = Join-Path $popplerPkg.FullName "tools"
            if (Test-Path $candidate) { $popplerTools = $candidate }
          }
          if (-not $popplerTools) {
            $fallback = "C:/Program Files/poppler/bin"
            if (Test-Path $fallback) { $popplerTools = $fallback }
          }
          if ($popplerTools) {
            Copy-Item "$popplerTools/*" "$dist/vendor/poppler/bin/" -Recurse -Force
          } else {
            Write-Warning "Poppler tools not found; PDF conversion may fail"
          }
        shell: pwsh

      - name: Verify build outputs
        run: |
          if (-not (Test-Path "dist/AanAI/AanAI.exe")) { Write-Error "PyInstaller output not found" }
          if (-not (Test-Path "dist/AanAI/vendor/tesseract/tesseract.exe")) { Write-Error "Bundled Tesseract missing" }
          if (-not (Test-Path "dist/AanAI/vendor/poppler/bin")) { Write-Warning "Bundled Poppler missing" }
        shell: pwsh

      - name: Create installer with Inno Setup
        run: |
          & 'C:/Program Files (x86)/Inno Setup 6/ISCC.exe' installer\aanai.iss
        shell: powershell

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: AanAI-Installer
          path: installer/dist/*.exe

      - name: Upload portable build (zip)
        run: |
          Compress-Archive -Path dist/AanAI/* -DestinationPath dist/AanAI-portable.zip
        shell: powershell
      - uses: actions/upload-artifact@v4
        with:
          name: AanAI-Portable
          path: dist/AanAI-portable.zip
